Q. Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.


nums=[]
target=int(input("What is the value for target"))
n=int(input("Number of elements in the array"))
for i in range(0,n):
    l=int(input())
    nums.append(l)
print(nums)
for x in nums:
    for y in nums:
     if x+y == target:
      return (nums.index(x), nums.index(y))
        
        
        
class Solution(object):
    def twoSum(self, nums, target):
        # generate hashmap
        hashMap = {}
        # enumerate() - returns (ith place, ith element)
        for i, n in enumerate(nums):
            # result will be the other number algorithm is finding
            diff = target - n
            # checks if diff is in hashMap
            if diff in hashMap:
                # returns ith index of diff, current ith index
                return hashMap[diff], i
            # appends (ith element, ith index) to the hashMap
            hashMap[n] = i
